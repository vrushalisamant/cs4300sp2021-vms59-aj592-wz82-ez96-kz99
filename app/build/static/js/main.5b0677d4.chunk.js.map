{"version":3,"sources":["Components/QuoteCard.js","Components/ResultBar.js","Output.js","Components/TagSelect.js","Input.js","background.jpg","Components/logo.png","Components/Logo.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteCard","props","useState","liked","setLike","likeButton","className","onClick","xmlns","width","height","fill","viewBox","fill-rule","d","style","likes","tags","categories_list","categories","split","i","length","push","Badge","variant","Card","Body","Container","Row","Col","xs","quote","author","ResultBar","searchInfo","text","fontSize","emoji","Output","data","searchResult","cards","Button","handleBack","TagSelect","options","label","value","selected","onChange","setSelected","labelledBy","Input","Form","Group","controlId","Label","Control","as","rows","name","Text","type","e","handleSubmit","map","item","Logo","src","logo","alt","App","queryString","require","isOutput","setOutput","setInfo","setResult","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","stringify","console","log","fetch","then","response","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b0677d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../App.css\";\n\nexport default function QuoteCard(props) {\n  const [liked, setLike] = useState(false);\n\n  //TODO: adding likes\n  const likeButton = liked ? (\n    <>\n      <button className=\"like-button\" onClick={() => setLike(false)}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"red\"\n          className=\"bi bi-heart-fill\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n          />\n        </svg>\n      </button>\n      <p style={{ \"font-size\": \"12px\" }}>{props.likes + 1}</p>\n    </>\n  ) : (\n    <>\n      <button className=\"like-button\" onClick={() => setLike(true)}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"red\"\n          className=\"bi bi-heart\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\n        </svg>\n      </button>\n      <p style={{ \"font-size\": \"12px\" }}>{props.likes}</p>\n    </>\n  );\n\n  const tags = [];\n  const categories_list = props.categories.split(\", \");\n  for (var i = 0; i < categories_list.length; i++) {\n    tags.push(\n      <Badge className=\"mr-1\" variant=\"info\" key={i}>\n        {categories_list[i]}\n      </Badge>\n    );\n  }\n\n  return (\n    <Card className=\"quote-card m-4\">\n      <Card.Body>\n        <Container>\n          <Row>\n            <Col xs={10}>\n              <blockquote className=\"blockquote m-2\">\n                <p>\n                  {'\"'} {props.quote} {'\"'}\n                </p>\n                <footer className=\"blockquote-footer\">{props.author}</footer>\n              </blockquote>\n              {tags}\n            </Col>\n            <Col xs={1}> {likeButton} </Col>\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\n\nfunction ResultBar(props) {\n  const tags = [];\n  for (var i = 0; i < props.searchInfo.tags.length; i++) {\n    tags.push(\n      <Badge className=\"mr-1\" variant=\"info\" key={i}>\n        {props.searchInfo.tags[i]}\n      </Badge>\n    );\n  }\n  return (\n    <Container style={{ width: \"80%\" }}>\n      <Row>\n        <Col xs={4}>\n          <h3>Your Search:</h3>\n        </Col>\n        <Col xs={6}>\n          <Row>\n            <Col>{props.searchInfo.text}</Col>\n          </Row>\n          <Row className=\"mt-4\">\n            <Col>\n              <h3>{tags}</h3>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col xs={2}>\n          <p style={{ fontSize: \"3vw\" }}>{props.searchInfo.emoji} </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ResultBar;\n","import \"./App.css\";\nimport React from \"react\";\nimport QuoteCard from \"./Components/QuoteCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ResultBar from \"./Components/ResultBar\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Output(props) {\n  //TODO: fetch quotes\n  const data = props.searchResult;\n  const cards = [];\n  for (var i = 0; i < data.length; i++) {\n    cards.push(\n      <QuoteCard\n        key={i}\n        quote={data[i].quote}\n        author={data[i].author}\n        categories={data[i].tags}\n        likes={data[i].likes}\n      />\n    );\n  }\n\n  return (\n    <Container>\n      <Row className=\"mt-4 mb-2\">\n        <ResultBar searchInfo={props.searchInfo} />\n      </Row>\n      <Row>\n        <Button\n          variant=\"outline-info\"\n          className=\"button\"\n          onClick={() => props.handleBack()}\n        >\n          Back to Search\n        </Button>\n      </Row>\n      <Row className=\"m-5\">\n        <Col>{cards} </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Output;\n","import React, { useState } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\n\nfunction TagSelect(props) { \n  const options = [\n    { label: \"Life\", value: \"life\" },\n    { label: \"Love\", value: \"love\" },\n    { label: \"Inspirational\", value: \"inspirational\"},\n    { label: \"Philosophy\", value: \"philosophy\" },\n    { label: \"Humor\", value: \"humor\" },\n    { label: \"God\", value: \"god\" },\n    { label: \"Truth\", value: \"truth\" },\n    { label: \"Wisdom\", value: \"wisdom\" },\n    { label: \"Death\", value: \"death\" },\n  ];\n\n  return (\n    <div>\n      <p className=\"text\">Choose some relevant tags for your quote:</p>\n\n      {/* TODO: Extract tags selected */}\n      <MultiSelect\n        options={options}\n        value={props.selected}\n        onChange={props.setSelected}\n        labelledBy=\"Select\"\n      />\n    </div>\n  );\n};\n\nexport default TagSelect;\n","import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport React, { useState } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TagSelect from \"./Components/TagSelect.js\";\n\nfunction Input(props) {\n  const [selected, setSelected] = useState([]);\n  return (\n    <Container className=\"input\">\n      <Form>\n        <Row className=\"tags\">\n          <Col>\n            {/* TODO: Extract tags selected */}\n            <TagSelect selected={selected} setSelected={setSelected} />\n          </Col>\n        </Row>\n\n        <Row className=\"feeling-moodbar\">\n          <Row className=\"feeling-moodbar\">\n            <Col className=\"feeling\">\n              <Form.Group controlId=\"feelingDescription\">\n                <Form.Label className=\"text\">\n                  How are you feeling today?\n                </Form.Label>\n                {/* TODO: Extract feeling input */}\n                <Form.Control as=\"textarea\" rows={3} name=\"feelingInput\" />\n                <Form.Text className=\"text-muted\">\n                  Are you feeling lonely? Troubled by anything? Tell us about it\n                  :)\n                </Form.Text>\n              </Form.Group>\n            </Col>\n\n            <Col className=\"moodbar\">\n              <Form.Group controlId=\"moodRange\">\n                <Form.Label className=\"text\">\n                  Indicate your emotional state:\n                </Form.Label>\n                {/* TODO: Extract mood input */}\n                <Form.Control\n                  type=\"range\"\n                  className=\"emoji-range\"\n                  name=\"moodInput\"\n                />\n              </Form.Group>\n              <p className=\"emoji\">😌 🙂 😐 🙁 😢 😰 😭</p>\n            </Col>\n          </Row>\n        </Row>\n\n        <Row>\n          <Col>\n            {/* TODO: Direct to output page after submit */}\n            <Button\n              variant=\"info\"\n              className=\"button\"\n              name=\"submit\"\n              onClick={(e) =>\n                props.handleSubmit({\n                  text: \"N/A\",\n                  tags: selected.map((item) => {\n                    return item.value;\n                  }),\n                  emoji: \"😢\",\n                })\n              }\n            >\n              Find Your Quotes\n            </Button>{\" \"}\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/background.b2f0be58.jpg\";","export default __webpack_public_path__ + \"static/media/logo.66cf5940.png\";","import React from 'react';\nimport logo from './logo.png';\n\nfunction Logo() {\n  // source: https://www.pngitem.com/pimgs/m/149-1493077_cute-dog-face-clip-art-transparent-background-cute.png\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Logo;","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Output from \"./Output\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Input from \"./Input.js\";\nimport Image from \"react-bootstrap/Image\";\nimport background from \"./background.jpg\";\nimport Logo from \"./Components/Logo.js\";\n\nfunction App() {\n  const queryString = require(\"query-string\");\n  const [isOutput, setOutput] = useState(false); //TODO: set this on clicking search\n  const [searchInfo, setInfo] = useState([{}])\n  const [searchResult, setResult] = useState([{}])\n  //TODO: search info from Input component\n  \n  const handleSubmit = (searchInfo)=>{\n    //modify searchInfo here\n    setInfo(searchInfo);\n    var tags = queryString.stringify({tags:searchInfo.tags});\n    console.log(tags);\n    fetch(`/search?${tags}`).then(\n      response => response.json()\n    ).then(data => {\n      setResult(data);\n      setOutput(true);\n    })\n  }\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: `url(${background})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <div className=\"header\">\n        <h1>QUOLESOME-NESS</h1>\n        <Logo />\n        <p>Feeling down? Let's find you some wholesome quotes!</p>\n      </div>\n      {isOutput ? (\n        <Output\n          searchInfo={searchInfo}\n          searchResult={searchResult}\n          handleBack={() => setOutput(false)}\n        />\n      ) : (\n        <Input handleSubmit={handleSubmit} />\n      )}\n      <div className=\"footer\">\n        <p>\n          Created by: Amber Zheng, Anya Ji, Eunice Zhang, Kai Zou, Vrushali\n          Samant{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}